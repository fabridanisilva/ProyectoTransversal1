/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vista;

import Modelo.Alumno;
import Modelo.Inscripcion;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import persistencia.AlumnoData;
import persistencia.InscripcionData;

/**
 *
 * @author chich
 */
public class Notas extends javax.swing.JInternalFrame {

    /**
     * Creates new form Notas
     */
    
    
    private AlumnoData aluData = new AlumnoData();
    private InscripcionData inscData = new InscripcionData();
    private ArrayList<Alumno> listaAlumnos;
    private DefaultTableModel modelo = new DefaultTableModel();
    private Alumno alumnoSeleccionado = null;
    
    
    public Notas() {
        initComponents();
        
         listaAlumnos = aluData.listarAlumnos();
        cargarAlumnos();
        armarCabeceraTabla();
        
}
    private void cargarAlumnos() {
    for (Alumno a : listaAlumnos) {
        jCargarNotas.addItem(a);
    }
}
    private void armarCabeceraTabla() {
        modelo.addColumn("ID");
        modelo.addColumn("Nombre");
        modelo.addColumn("Nota");
        jNotas.setModel(modelo);
    }
    private void borrarFilasTabla() {
    int filas = modelo.getRowCount() - 1;
    for (int i = filas; i >= 0; i--) {
        modelo.removeRow(i);
    }
}
    
    private void cargarMateriasYNotas() {
        borrarFilasTabla();
        ArrayList<Inscripcion> inscripciones = inscData.obtenerInscripcionesPorAlumno(alumnoSeleccionado.getIdAlumno());
        for (Inscripcion i : inscripciones) {
            modelo.addRow(new Object[]{
                i.getMateria().getIdMateria(),
                i.getMateria().getNombre(),
                i.getNota()
            });
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCargarNotas = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jNotas = new javax.swing.JTable();
        jBGuardar = new javax.swing.JButton();
        jSalir = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Cargar Notas");

        jLabel2.setText("Seleccione Alumno :");

        jCargarNotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCargarNotasActionPerformed(evt);
            }
        });

        jNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Nota"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Short.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jNotas);

        jBGuardar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jBGuardar.setText("Guardar");
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });

        jSalir.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jSalir.setText("Salir");
        jSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(jLabel1))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel2)
                .addGap(44, 44, 44)
                .addComponent(jCargarNotas, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jBGuardar)
                .addGap(196, 196, 196)
                .addComponent(jSalir))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2))
                    .addComponent(jCargarNotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBGuardar)
                    .addComponent(jSalir)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSalirActionPerformed
        // TODO add your handling code here:
    jSalir.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        dispose(); // Cierra solo esta ventana interna
    }
});


   
    }//GEN-LAST:event_jSalirActionPerformed

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = jNotas.getSelectedRow();
    if (filaSeleccionada != -1) {
        Alumno alumno = (Alumno) jCargarNotas.getSelectedItem();
        int idMateria = (Integer) modelo.getValueAt(filaSeleccionada, 0);
        double nota;

        try {
            nota = Double.parseDouble(modelo.getValueAt(filaSeleccionada, 2).toString());
            inscData.actualizarNota(alumno.getIdAlumno(), idMateria, nota);
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ingrese una nota v√°lida.");
        }
    } else {
        javax.swing.JOptionPane.showMessageDialog(this, "Seleccione una fila para modificar.");
    }
    }//GEN-LAST:event_jBGuardarActionPerformed

    private void jCargarNotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCargarNotasActionPerformed
        // TODO add your handling code here:
        if (jCargarNotas.getSelectedItem() != null) {
        alumnoSeleccionado = (Alumno) jCargarNotas.getSelectedItem();
        borrarFilasTabla();

        ArrayList<Inscripcion> inscripciones = inscData.obtenerInscripcionesPorAlumno(alumnoSeleccionado.getIdAlumno());

        for (Inscripcion insc : inscripciones) {
            modelo.addRow(new Object[]{
                insc.getMateria().getIdMateria(),
                insc.getMateria().getNombre(),
                insc.getNota()
            });
        }
    }
    }//GEN-LAST:event_jCargarNotasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBGuardar;
    private javax.swing.JComboBox jCargarNotas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTable jNotas;
    private javax.swing.JButton jSalir;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}


        
